s72-slider .s72-slider-control,
s72-userwishlist .s72-slider-control {
  background-color: var(--primary);
  border: 1px solid var(--primary);
  border-radius: 50%;
  font-family: $font-family-base;
  height: $slider-control-height;
  left: -$slider-control-width / 2;
  margin-top: 0;
  width: $slider-control-width;
  z-index: 10;

  &.right {
    left: auto;
    right: -$slider-control-width / 2;
  }

  .s72-icon {
    color: #fff;
    // another wierd fix for prod (staging too) where for some reason the arrow does was appearing below the circle border.
    // I think (not sure why) the icon was actually getting display: block from somewhere else on local but not prod.
    display: inline-block;
    font-size: 32px;
    left: 50%;
    // NOTE(gscragg):
    // this is not ideal, but the icon doesnt look centered (in the circle border) without it
    // there might be a nice calculation here but, not all sites have a circle bordered control,
    // so this should be removed if its not needed.
    margin-top: -1px;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }

  &:hover,
  &:active,
  &:focus {
    // NOTE(jackH):
    // no nice solution for darkening colour while using css variables
    // commenting this out though because it doesn't seem to be in use anywhere
    // background: darken($primary, 7.5%);
  }
}

// make .slider-control be in the middle of the poster, not the middle of the item (which includes captions).
@for $i from 1 through 10 {
  $width: round($page-collection-container-width / $i);
  $child-width: $width - ($page-collection-item-padding-horizontal * 2);
  .slider-#{$i} {
    &.slider-landscape .s72-slider-control {
      top: ($child-width * $poster-landscape-size-ratio) / 2 - ($slider-control-height / 2);
    }

    &.slider-portrait .s72-slider-control {
      top: ($child-width * $poster-portrait-size-ratio) / 2 - ($slider-control-height / 2);
    }
  }
}

/* stylelint-disable selector-no-qualifying-type */
s72-userwishlist[mode='slider'].s72-slider-fluid.has-prev::before,
s72-slider.has-prev::before {
  @extend .slider-fade-in;
}

s72-userwishlist[mode='slider'].s72-slider-fluid.has-next::after,
s72-slider.has-next::after {
  @extend .slider-fade-out;
}

s72-slider.has-prev.s72-slider-scroll::before,
s72-slider.has-next.s72-slider-scroll::after {
  width: 50px;
}
/* stylelint-enable selector-no-qualifying-type */

.slider-fade-in {
  @include gradient-x(rgba($body-bg, 0.9), transparent, 0%, 100%);
  content: '';
  display: block;
  height: 100%;
  left: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  width: 100px;
  z-index: 5;
}

.slider-fade-out {
  @extend .slider-fade-in;
  @include gradient-x(transparent, rgba($body-bg, 0.9), 0%, 100%);
  left: auto;
  right: 0;
}

.slider {
  // not sure why this is needed for sliders with only a couple of items, that dont require sliding.
  width: 100%;
}

.slider-fluid {
  position: relative;
  // This changes the default value for s72-slider due to us using the fade-in/fade-out to show more items
  // We instead use .slider-fluid as the relative positioned parent so the fades dont move when scrolling.
  // removing this value will break those fades.

  s72-slider {
    position: static;
  }

  .s72-slider-fluid {
    .s72-slider-container-container {
      @extend .container;
      position: static;
    }
  }
}
