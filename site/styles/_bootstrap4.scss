// This is currently all boostrap except:
// * custom forms
// * carousel

@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/mixins';
@import 'bootstrap/scss/print';
@import 'bootstrap/scss/reboot';
@import 'bootstrap/scss/type';
@import 'bootstrap/scss/images';
@import 'bootstrap/scss/code';
@import 'bootstrap/scss/grid';
@import 'bootstrap/scss/tables';
@import 'bootstrap/scss/forms';
@import 'bootstrap/scss/buttons';
@import 'bootstrap/scss/transitions';
@import 'bootstrap/scss/dropdown';
@import 'bootstrap/scss/button-group';
@import 'bootstrap/scss/input-group';
@import 'bootstrap/scss/nav';
@import 'bootstrap/scss/navbar';
@import 'bootstrap/scss/card';
@import 'bootstrap/scss/breadcrumb';
@import 'bootstrap/scss/pagination';
@import 'bootstrap/scss/badge';
@import 'bootstrap/scss/jumbotron';
@import 'bootstrap/scss/alert';
@import 'bootstrap/scss/progress';
@import 'bootstrap/scss/media';
@import 'bootstrap/scss/list-group';
@import 'bootstrap/scss/close';
@import 'bootstrap/scss/modal';
@import 'bootstrap/scss/tooltip';
@import 'bootstrap/scss/popover';
@import 'bootstrap/scss/utilities';

// The following override classes are to get around Bootstrap 4's use of Sass variables.
// CSS themes will not work without these hacks.


@mixin btn-override(
  $button-text-color,
  $button-text-color-hover,
  $button-background,
  $button-background-hover){
  @extend .btn-primary;

  border-color: $button-background;
  background-color: $button-background;
  color: $button-text-color;

  @include hover() {
    border-color: $button-background-hover;
    background-color: $button-background-hover;
    color: $button-text-color-hover;
  }

  &:focus,
  &.focus {
    border-color: $button-background-hover;
    color: $button-text-color-hover;
    @if $enable-shadows {
      @include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba($button-background, 0.5));
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba($button-background, 0.5);
    }
  }

  &.disabled,
  &:disabled {
    background-color: $button-background;
    border-color: $button-background;
    color: $button-text-color;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    background-color: $button-background-hover;
    border-color: $button-background-hover;
    color: $button-text-color-hover;

    &:focus {
      @if $enable-shadows and $btn-active-box-shadow != none {
        @include box-shadow(
          $btn-active-box-shadow,
          0 0 0 $btn-focus-width rgba($button-background, 0.5)
        );
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($button-background, 0.5);
      }
    }
  }
}

.btn-primary-override {
  @include btn-override(
    $button-text-color,
    $button-text-color-hover,
    $button-background,
    $button-background-hover);
}

.btn-link-override {
  @extend .btn-link;

  color: var(--link-color);

  @include hover() {
    color: var(--link-color-hover);
  }
}

a {
  @extend a;

  color: var(--link-color);

  @include hover() {
    color: var(--link-color-hover);
  }
}

.dropdown-item-override {
  @extend .dropdown-item;

  &.active,
  &:active {
    background-color: transparent;
  }
}

.list-group-item-override {
  @extend .list-group-item;

  &.active {
    background-color: var(--primary);
    border-color: var(--primary);
  }
}
